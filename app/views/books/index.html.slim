.container data-controller="books"
    = form_with url: "/", method: :get do |form|
        .columns
            .column
                .control
                    select(multiple name="name[]")
                        - @authors.each do |author|
                            option value="#{author.id}" #{author.name}

            .column
                .control
                    input#min type="number" class="input" name="min"
            
            .column
                .control
                    input#max type="number" class="input" name="max"

            .column
                .control
                    = form.submit "Submit", class: "button", onclick: ""

    .column
      .control
        = turbo_frame_tag "new_author_turbo_frame" do
          .header
            h1 Author
            = link_to "New Author", new_author_path, class: "button"

    - flash.each do |type, msg|
        .notification.is-danger
            button.delete
            = msg

    br
    table.table.is-bordered
        thead
            tr
                th Cover
                th Title
                th Author
                th Page Number
                th ISBN
                th Year
                th Rating
                th Relese Date
        tbody
            - @records.each do |record|
                tr
                    td
                        figure.image.is-96x96.image-modal-trigger data-target="image-modal"
                            img#image src="#{record.cover}"
                    td
                      = turbo_frame_tag dom_id(record, "title_index_update") do
                        = link_to "#{record.title}", book_path(record), data: { turbo_frame: "_top" }
                        = link_to "Edit title", edit_book_path(record), class: "button"
                    td
                      = link_to "#{record.author.name}", author_path(record)

                    td
                      = turbo_frame_tag "page_index_#{record.id}"
                        | #{record.pages}
                        = link_to "Edit", edit_book_path(record), class: "button"
                    td #{record.isbn}
                    td #{record.year}
                    td #{record.average_rating}
                    td #{record.release_date&.to_date}
    br
    == render partial: 'pagy/nav', locals: {pagy: @pagy}

.modal#image-modal
    .modal-background
    .modal-content
        p.image.is-4by3
            img src="https://bulma.io/images/placeholders/1280x960.png" alt="" id="image-target"
    button.modal-close.is-large aria-label="close"
= javascript_pack_tag 'index'

javascript:
    document.addEventListener('DOMContentLoaded', () => {
        // Functions to open and close a modal
        function openModal($el) {
            $el.classList.add('is-active');
        }

        function closeModal($el) {
            $el.classList.remove('is-active');
        }

        function closeAllModals() {
            (document.querySelectorAll('.modal') || []).forEach(($modal) => {
                closeModal($modal);
            });
        }

        // Add a click event on buttons to open a specific modal
        (document.querySelectorAll('.image-modal-trigger') || []).forEach(($trigger) => {
            const modal = $trigger.dataset.target;
            const $target = document.getElementById(modal);

            $trigger.addEventListener('click', () => {
                openModal($target);
            });
        });

        // Add a click event on various child elements to close the parent modal
        (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
            const $target = $close.closest('.modal');

            $close.addEventListener('click', () => {
                closeModal($target);
            });
        });

        // Add a keyboard event to close all modals
        document.addEventListener('keydown', (event) => {
            const e = event || window.event;

            if (e.keyCode === 27) { // Escape key
                closeAllModals();
            }
        });
    });